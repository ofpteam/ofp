<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webside.ofp.mapper.CustomerMapper">
	<resultMap id="customerMap" type="com.webside.ofp.model.CustomerEntity">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 18 
			00:02:59 CST 2017. -->
		<id column="CUSTOMER_ID" jdbcType="INTEGER" property="customerId" />
		<result column="CUSTOMER_NAME" jdbcType="VARCHAR" property="customerName" />
		<result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
		<result column="COUNTRY" jdbcType="VARCHAR" property="country" />
		<result column="IS_DELETE" jdbcType="INTEGER" property="isDelete" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="CREATE_USER" jdbcType="INTEGER" property="createUser" />
		<result column="MDOIFY_USER" jdbcType="INTEGER" property="mdoifyUser" />
		<result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
	</resultMap>

	<sql id="customer_column_List">
		CUSTOMER_ID, CUSTOMER_NAME, TELEPHONE, COUNTRY, IS_DELETE, CREATE_TIME,
		MODIFY_TIME,
		CREATE_USER, MODIFY_USER, DESCRIPTION
	</sql>

	<sql id="customer_column_List_without_id">
		CUSTOMER_NAME, TELEPHONE, COUNTRY, IS_DELETE, CREATE_TIME, MODIFY_TIME,
		CREATE_USER, MODIFY_USER, DESCRIPTION
	</sql>

	<sql id="where_clause">
		<if test="customerId != null and customerId != 0">
			and CUSTOMER_ID = #{customerId} 
		</if>
		<if test="customerName != null and customerName != ''">
			and CUSTOMER_NAME like CONCAT(#{customerName},'%') 
		</if>
		<if test="telephone != null and telephone != ''">
			and TELEPHONE like CONCAT(#{telephone},'%') 
		</if>
	</sql>

	<select id="queryListByPage" parameterType="map" resultMap="customerMap"
		flushCache="true" useCache="true">
		SELECT
		<include refid="customer_column_List" />
		from customer where is_delete = 0
		<include refid="where_clause" /> 
		and CUSTOMER_ID >= (
		select CUSTOMER_ID from customer order by CUSTOMER_ID limit ${start},1
		)
		limit ${pageNumber}  
	</select>
	
	<select id="queryListAll" parameterType="map" resultMap="customerMap"
		flushCache="true" useCache="true">
		SELECT
		<include refid="customer_column_List" />
		from customer where is_delete = 0 
		<include refid="where_clause" />
		order by CUSTOMER_ID desc
	</select>

	<select id="findByName" parameterType="String" resultMap="customerMap"
		flushCache="true" useCache="true">
		SELECT
		<include refid="customer_column_List" />
		FROM customer c
		where c.CUSTOMER_NAME = #{name} and is_delete = 0
	</select>

	<insert id="insert" parameterType="com.webside.ofp.model.CustomerEntity"
		useGeneratedKeys="true" keyProperty="customerId">
		insert ignore into customer (
		CUSTOMER_NAME, TELEPHONE, COUNTRY, IS_DELETE, CREATE_TIME,
		CREATE_USER, DESCRIPTION
		)
		values (
		#{customerName},
		#{telephone},
		#{country},
		0,
		now(),
		#{createUser},
		#{description}
		)
	</insert>


	<select id="findById" parameterType="long" resultMap="customerMap"
		flushCache="true" useCache="true">
		SELECT
		<include refid="customer_column_List" />
		FROM customer c
		where c.CUSTOMER_ID = #{id} and is_delete = 0
	</select>

	<update id="update" parameterType="com.webside.ofp.model.CustomerEntity"
		flushCache="true">
		update customer
		<set>
			<if test="customerName != null and customerName != ''">
				CUSTOMER_NAME = #{customerName},
			</if>
			<if test="telephone != null and telephone != ''">
				TELEPHONE = #{telephone},
			</if>
			<if test="country != null and country != ''">
				COUNTRY = #{country},
			</if>
			<if test="description != null and description != ''">
				DESCRIPTION = #{description},
			</if>
			MODIFY_TIME = now(),
			MODIFY_USER = #{modifyUser}
		</set>
		where CUSTOMER_ID = ${customerId}
	</update>

	<delete id="deleteBatchById" parameterType="list">
		update customer set IS_DELETE = 1 where CUSTOMER_ID in
		<foreach collection="list" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteById" parameterType="int">
		update customer set IS_DELETE = 1 where CUSTOMER_ID = ${id}
	</delete>
</mapper>